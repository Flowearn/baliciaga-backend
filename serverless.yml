service: baliciaga-backend

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  region: ap-southeast-1
  stage: dev
  environment:
    NODE_ENV: production
    S3_BUCKET_NAME_SSM_PATH: /baliciaga/${sls:stage}/s3BucketName
    S3_CAFE_DATA_FILE_KEY_SSM_PATH: /baliciaga/${sls:stage}/s3DataFileKeyCafe
    S3_BAR_DATA_FILE_KEY_SSM_PATH: /baliciaga/${sls:stage}/s3DataFileKeyBar
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "ssm:GetParameter"
      Resource:
        # Permissions for S3 Bucket Name across stages
        - "arn:aws:ssm:ap-southeast-1:335069051432:parameter/baliciaga/dev/s3BucketName"
        - "arn:aws:ssm:ap-southeast-1:335069051432:parameter/baliciaga/staging/s3BucketName"
        - "arn:aws:ssm:ap-southeast-1:335069051432:parameter/baliciaga/prod/s3BucketName"
        # Permissions for S3 Cafe Data File Key across stages
        - "arn:aws:ssm:ap-southeast-1:335069051432:parameter/baliciaga/dev/s3DataFileKeyCafe"
        - "arn:aws:ssm:ap-southeast-1:335069051432:parameter/baliciaga/staging/s3DataFileKeyCafe"
        - "arn:aws:ssm:ap-southeast-1:335069051432:parameter/baliciaga/prod/s3DataFileKeyCafe"
        # Permissions for S3 Bar Data File Key across stages
        - "arn:aws:ssm:ap-southeast-1:335069051432:parameter/baliciaga/dev/s3DataFileKeyBar"
        - "arn:aws:ssm:ap-southeast-1:335069051432:parameter/baliciaga/staging/s3DataFileKeyBar"
        - "arn:aws:ssm:ap-southeast-1:335069051432:parameter/baliciaga/prod/s3DataFileKeyBar"
    # Add S3 access permissions for reading cafe data
    - Effect: "Allow"
      Action:
        - "s3:GetObject"
      Resource:
        - "arn:aws:s3:::baliciaga-database/data/cafes.json"
        - "arn:aws:s3:::baliciaga-database/data/*"

functions:
  placesApi:
    handler: src/fetchPlaces.handler
    timeout: 180
    events:
      - http:
          path: /places
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-User-Agent
              - X-Amz-Security-Token
            allowCredentials: false
      - http:
          path: /places/{placeId}
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-User-Agent
              - X-Amz-Security-Token
            allowCredentials: false

plugins:
  - serverless-offline
  - serverless-dotenv-plugin

custom:
  serverless-offline:
    httpPort: 3006 
  dotenv:
    exclude:
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - AWS_SESSION_TOKEN
      - AWS_REGION