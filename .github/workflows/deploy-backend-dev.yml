name: Deploy Backend to Dev

on:
  push:
    branches:
      - dev
      - development
    paths:
      - 'src/**'
      - 'serverless.yml'
      - 'package*.json'
  workflow_dispatch:  # 允许手动触发

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    # 防止并发部署
    concurrency:
      group: deploy-backend-dev
      cancel-in-progress: false
    
    steps:
      # 1. 检出代码
      - name: Checkout code
        uses: actions/checkout@v4
      
      # 2. 设置 Node.js 环境
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      # 3. 安装依赖
      - name: Install dependencies
        run: |
          npm ci --production
          npm install -g serverless@4
      
      # 4. 配置 AWS 凭证
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1
      
      # 5. 部署到 AWS
      - name: Deploy to AWS
        run: |
          echo "🚀 Starting deployment to dev environment..."
          serverless deploy --stage dev --verbose
        env:
          # 确保 Serverless Framework 可以访问 AWS 凭证
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ap-southeast-1
      
      # 6. 部署后验证
      - name: Verify deployment
        run: |
          echo "✅ Deployment completed. Verifying stack..."
          aws cloudformation describe-stacks --stack-name baliciaga-backend-dev --query 'Stacks[0].StackStatus' --output text
      
      # 7. 发送通知（可选）
      - name: Send notification
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ Backend deployment to dev environment succeeded!"
          else
            echo "❌ Backend deployment to dev environment failed!"
          fi